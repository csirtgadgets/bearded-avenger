# This playbook will provision an EC2 instance, takes about 10m to execute...
# copy this file to site.yml and fill in the vars
# make sure your ~/.aws/credentials file is configured properly so the boto lib can pick it up
#
# [default]
# region = 'us-east-1'
# aws_access_key_id = XXXXXXXX
# aws_secret_access_key = XXXXXXXX

---
- name: provision hosts
  hosts: localhost
  connection: local
  gather_facts: False
  # http://docs.ansible.com/ansible/playbooks_conditionals.html#conditional-imports
  vars_files:
    - "vars/aws_defaults.yml"
  vars:
    aws_keyname: '' # ssh key id
    aws_vpc_name: ''
    aws_subnet_name: ''
    aws_security_group_name: ''
  tasks:
    - name: provisioning ec2 instance
      ec2:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        key_name: "{{ aws_keyname }}"
        wait: True
        image: "{{ aws_base_ami }}"
        instance_type: "{{ aws_instance_type }}"
        instance_tags:
          Name: bearded-avenger
        vpc_subnet_id: "{{ aws_subnet_name }}"
        group_id: "{{ aws_security_group_name }}"
      register: ec2
    - name: Add new instance to host group
      add_host: hostname="{{ item.private_ip }}" groupname=launched
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for: host="{{ item.private_ip }}" port=22 delay=60 timeout=360 state=started
      with_items: "{{ ec2.instances }}"

- name: "Configure CIF"
  hosts: launched
  gather_facts: True
  become: True
  roles:
    - { role: ubuntu14, tags: role-ubuntu14 }
    - { role: bearded-avenger, tags: role-bearded-avenger }